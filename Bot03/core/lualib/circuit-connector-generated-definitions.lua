-- This file is generated by script



belt_connector_template =
{
  led_blue =
  {
    filename = "__base__/graphics/entity/transport-belt/connector/hr-ccm-belt-04c-LED-B.png",
    frame_count = 7,
    height = 44,
    line_length = 1,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(-9, -15.5),
    width = 30
  },

  led_red =
  {
    filename = "__base__/graphics/entity/transport-belt/connector/hr-ccm-belt-04d-LED-R.png",
    frame_count = 7,
    height = 18,
    line_length = 1,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(6.5, 5),
    width = 34
  },

  led_green =
  {
    filename = "__base__/graphics/entity/transport-belt/connector/hr-ccm-belt-04e-LED-G.png",
    frame_count = 7,
    height = 26,
    line_length = 1,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(6, 5),
    width = 42
  },

  wire_offsets =
  {
    { red = util.by_pixel(13.5, -21.5), green = util.by_pixel(21.5, -17) },
    { red = util.by_pixel(13.5, -21.5), green = util.by_pixel(21.5, -17) },
    { red = util.by_pixel(13.5, -21.5), green = util.by_pixel(21.5, -17) },
    { red = util.by_pixel(13.5, -21.5), green = util.by_pixel(21.5, -17) },
    { red = util.by_pixel(10, -26), green = util.by_pixel(18, -21) },
    { red = util.by_pixel(10, -26), green = util.by_pixel(18, -21) },
    { red = util.by_pixel(10, -26), green = util.by_pixel(18, -21) },
    { red = util.by_pixel(10, -26), green = util.by_pixel(18, -21) },
    { red = util.by_pixel(13, -21), green = util.by_pixel(21.5, -16) },
    { red = util.by_pixel(13, -21), green = util.by_pixel(21.5, -16) },
    { red = util.by_pixel(13, -21), green = util.by_pixel(21.5, -16) },
    { red = util.by_pixel(13, -21), green = util.by_pixel(21.5, -16) },
    { red = util.by_pixel(12.5, -27), green = util.by_pixel(20.5, -22) },
    { red = util.by_pixel(12.5, -27), green = util.by_pixel(20.5, -22) },
    { red = util.by_pixel(12.5, -27), green = util.by_pixel(20.5, -22) },
    { red = util.by_pixel(12.5, -27), green = util.by_pixel(20.5, -22) },
    { red = util.by_pixel(11, -17), green = util.by_pixel(18.5, -11.5) },
    { red = util.by_pixel(11, -17), green = util.by_pixel(18.5, -11.5) },
    { red = util.by_pixel(11, -17), green = util.by_pixel(18.5, -11.5) },
    { red = util.by_pixel(11, -17), green = util.by_pixel(18.5, -11.5) },
    { red = util.by_pixel(11.5, -20.5), green = util.by_pixel(20, -15.5) },
    { red = util.by_pixel(11.5, -20.5), green = util.by_pixel(20, -15.5) },
    { red = util.by_pixel(11.5, -20.5), green = util.by_pixel(20, -15.5) },
    { red = util.by_pixel(11.5, -20.5), green = util.by_pixel(20, -15.5) },
    { red = util.by_pixel(13, -20.5), green = util.by_pixel(21, -15.5) },
    { red = util.by_pixel(13, -20.5), green = util.by_pixel(21, -15.5) },
    { red = util.by_pixel(13, -20.5), green = util.by_pixel(21, -15.5) },
    { red = util.by_pixel(13, -20.5), green = util.by_pixel(21, -15.5) }
  },

  wire_shadow_offsets =
  {
    { red = util.by_pixel(26, -12), green = util.by_pixel(35, -6.5) },
    { red = util.by_pixel(26, -12), green = util.by_pixel(35, -6.5) },
    { red = util.by_pixel(26, -12), green = util.by_pixel(35, -6.5) },
    { red = util.by_pixel(26, -12), green = util.by_pixel(35, -6.5) },
    { red = util.by_pixel(23.5, -16.5), green = util.by_pixel(33, -11) },
    { red = util.by_pixel(23.5, -16.5), green = util.by_pixel(33, -11) },
    { red = util.by_pixel(23.5, -16.5), green = util.by_pixel(33, -11) },
    { red = util.by_pixel(23.5, -16.5), green = util.by_pixel(33, -11) },
    { red = util.by_pixel(28, -11.5), green = util.by_pixel(37.5, -6) },
    { red = util.by_pixel(28, -11.5), green = util.by_pixel(37.5, -6) },
    { red = util.by_pixel(28, -11.5), green = util.by_pixel(37.5, -6) },
    { red = util.by_pixel(28, -11.5), green = util.by_pixel(37.5, -6) },
    { red = util.by_pixel(28.5, -17.5), green = util.by_pixel(37.5, -12) },
    { red = util.by_pixel(28.5, -17.5), green = util.by_pixel(37.5, -12) },
    { red = util.by_pixel(28.5, -17.5), green = util.by_pixel(37.5, -12) },
    { red = util.by_pixel(28.5, -17.5), green = util.by_pixel(37.5, -12) },
    { red = util.by_pixel(27.5, -7), green = util.by_pixel(36, -1) },
    { red = util.by_pixel(27.5, -7), green = util.by_pixel(36, -1) },
    { red = util.by_pixel(27.5, -7), green = util.by_pixel(36, -1) },
    { red = util.by_pixel(27.5, -7), green = util.by_pixel(36, -1) },
    { red = util.by_pixel(29.5, -10.5), green = util.by_pixel(39, -5) },
    { red = util.by_pixel(29.5, -10.5), green = util.by_pixel(39, -5) },
    { red = util.by_pixel(29.5, -10.5), green = util.by_pixel(39, -5) },
    { red = util.by_pixel(29.5, -10.5), green = util.by_pixel(39, -5) },
    { red = util.by_pixel(30.5, -11.5), green = util.by_pixel(40.5, -6) },
    { red = util.by_pixel(30.5, -11.5), green = util.by_pixel(40.5, -6) },
    { red = util.by_pixel(30.5, -11.5), green = util.by_pixel(40.5, -6) },
    { red = util.by_pixel(30.5, -11.5), green = util.by_pixel(40.5, -6) }
  },

  light_offsets =
  {
    { rg = util.by_pixel(10, 4.5), b = util.by_pixel(-9, -13.5) },
    { rg = util.by_pixel(9, 5.5), b = util.by_pixel(-8, -20) },
    { rg = util.by_pixel(11, 5), b = util.by_pixel(-9, -13.5) },
    { rg = util.by_pixel(9, 5), b = util.by_pixel(-9, -11) },
    { rg = util.by_pixel(10, 4.5), b = util.by_pixel(-10, -20.5) },
    { rg = util.by_pixel(10.5, 4.5), b = util.by_pixel(-9.5, -13.5) },
    { rg = util.by_pixel(1.5, 5.5), b = util.by_pixel(-9.5, -14) }
  }
}

belt_frame_connector_template =
{
  frame_main =
  {
    sheet =
    {
      filename = "__base__/graphics/entity/transport-belt/connector/hr-ccm-belt-04a-sequence.png",
      frame_count = 4,
      height = 94,
      line_length = 4,
      priority = "low",
      scale = 0.5,
      shift = util.by_pixel(3.5, -5),
      variation_count = 7,
      width = 80
    }
  },

  back_patch =
  {
    sheet =
    {
      filename = "__base__/graphics/entity/transport-belt/connector/hr-ccm-belt-04a-sequence-back-patch.png",
      frame_count = 1,
      height = 72,
      line_length = 3,
      priority = "low",
      scale = 0.5,
      shift = util.by_pixel(0, -2),
      variation_count = 3,
      width = 66
    }
  },

  frame_shadow =
  {
    sheet =
    {
      draw_as_shadow = true,
      filename = "__base__/graphics/entity/transport-belt/connector/hr-ccm-belt-04b-sequence-shadow.png",
      frame_count = 4,
      height = 112,
      line_length = 4,
      priority = "low",
      scale = 0.5,
      shift = util.by_pixel(2, 3),
      variation_count = 7,
      width = 160
    }
  },

  frame_main_scanner =
  {
    filename = "__base__/graphics/entity/transport-belt/connector/hr-CCM-BELT-SPRITES-SCANNER.png",
    frame_count = 8,
    height = 64,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(0, 0.5),
    width = 22
  },

  wire_offset_hotfix = util.by_pixel(-1, 1),
  wire_shadow_offset_hotfix = util.by_pixel(-1, 1)
}

inserter_connector_template =
{
  connector_main =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-base-sequence.png",
    frame_count = 4,
    height = 40,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(0, 0.5),
    width = 52
  },

  connector_shadow =
  {
    draw_as_shadow = true,
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-base-shadow.png",
    frame_count = 4,
    height = 36,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(5.5, 5),
    width = 56
  },

  led_blue_off =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-LED-B-off-sequence.png",
    frame_count = 4,
    height = 26,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(-1.5, 2),
    width = 46
  },

  led_blue =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-LED-B-on-sequence.png",
    frame_count = 4,
    height = 42,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(-1.5, 2),
    width = 60
  },

  led_green =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-LED-G-sequence.png",
    frame_count = 4,
    height = 50,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(-3, 0.5),
    width = 54
  },

  led_red =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-LED-R-sequence.png",
    frame_count = 4,
    height = 50,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(-3, 0.5),
    width = 54
  },

  wire_pins =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-wire-sequence.png",
    frame_count = 4,
    height = 46,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(2, -3),
    width = 62
  },

  wire_pins_shadow =
  {
    draw_as_shadow = true,
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-inserter-01-wire-shadow.png",
    frame_count = 4,
    height = 46,
    line_length = 4,
    priority = "extra-high",
    flags = { "low-object" },
    scale = 0.5,
    shift = util.by_pixel(11, 3.5),
    width = 64
  },

  wire_offset_hotfix = util.by_pixel(-1, 2),
  wire_shadow_offset_hotfix = util.by_pixel(-1, 2),
  light_offset_hotfix = util.by_pixel(-1, 2),
  wire_offsets =
  {
    { red = util.by_pixel(13, -10), green = util.by_pixel(16, -4.5) },
    { red = util.by_pixel(7.5, -13), green = util.by_pixel(13, -10) },
    { red = util.by_pixel(16.5, 1.5), green = util.by_pixel(12.5, 6) },
    { red = util.by_pixel(-5.5, -13.5), green = util.by_pixel(-12, -11) }
  },

  wire_shadow_offsets =
  {
    { red = util.by_pixel(21.5, -2.5), green = util.by_pixel(25, 3) },
    { red = util.by_pixel(15, -6.5), green = util.by_pixel(21.5, -3) },
    { red = util.by_pixel(25, 8.5), green = util.by_pixel(22, 13.5) },
    { red = util.by_pixel(4.5, -6), green = util.by_pixel(-3, -3.5) }
  },

  light_offsets =
  {
    { rg = util.by_pixel(-9.5, -6.5), b = util.by_pixel(-11, -3) },
    { rg = util.by_pixel(4.5, 7.5), b = util.by_pixel(8, 5.5) },
    { rg = util.by_pixel(-11, 2.5), b = util.by_pixel(-8.5, 4.5) },
    { rg = util.by_pixel(-6.5, 6), b = util.by_pixel(-3, 7) }
  }
}

universal_connector_template =
{
  connector_main =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04a-base-sequence.png",
    frame_count = 32,
    height = 50,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(0, 1),
    width = 52
  },

  connector_shadow =
  {
    draw_as_shadow = true,
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04b-base-shadow-sequence.png",
    frame_count = 32,
    height = 46,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(2.5, 2.5),
    width = 62
  },

  wire_pins =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04c-wire-sequence.png",
    frame_count = 32,
    height = 58,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(0, 0),
    width = 62
  },

  wire_pins_shadow =
  {
    draw_as_shadow = true,
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04d-wire-shadow-sequence.png",
    frame_count = 32,
    height = 54,
    width = 70,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(5, 4)
  },

  led_blue =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04e-blue-LED-on-sequence.png",
    frame_count = 32,
    height = 60,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(0, 0),
    width = 60
  },

  led_blue_off =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04f-blue-LED-off-sequence.png",
    frame_count = 32,
    height = 44,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(0, 0),
    width = 46
  },

  led_green =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04h-green-LED-sequence.png",
    frame_count = 32,
    height = 46,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(0, 0),
    width = 48
  },

  led_red =
  {
    filename = "__base__/graphics/entity/circuit-connector/hr-ccm-universal-04i-red-LED-sequence.png",
    frame_count = 32,
    height = 46,
    line_length = 8,
    priority = "low",
    scale = 0.5,
    shift = util.by_pixel(0, 0),
    width = 48
  },

  wire_offsets =
  {
    { red = util.by_pixel(-0.5, 6.5), green = util.by_pixel(-8, 6.5) },
    { red = util.by_pixel(6.5, 2.5), green = util.by_pixel(1.5, 6) },
    { red = util.by_pixel(9, -3.5), green = util.by_pixel(11, 2.5) },
    { red = util.by_pixel(8, -8), green = util.by_pixel(13.5, -4) },
    { red = util.by_pixel(1, -11), green = util.by_pixel(9.5, -11) },
    { red = util.by_pixel(-6.5, -9), green = util.by_pixel(-1, -13) },
    { red = util.by_pixel(-11, -4), green = util.by_pixel(-8.5, -10.5) },
    { red = util.by_pixel(-9, 1.5), green = util.by_pixel(-13.5, -2) },
    { red = util.by_pixel(-3.5, 6), green = util.by_pixel(-9.5, 8.5) },
    { red = util.by_pixel(5.5, 5), green = util.by_pixel(0.5, 10) },
    { red = util.by_pixel(10.5, 0), green = util.by_pixel(11.5, 7.5) },
    { red = util.by_pixel(10, -6.5), green = util.by_pixel(14.5, 0) },
    { red = util.by_pixel(3, -10), green = util.by_pixel(10, -7.5) },
    { red = util.by_pixel(-3, -10), green = util.by_pixel(-10, -7) },
    { red = util.by_pixel(-9.5, 0.5), green = util.by_pixel(-10.5, 7) },
    { red = util.by_pixel(3, 5.5), green = util.by_pixel(9.5, 7.5) },
    { red = util.by_pixel(-3, 7), green = util.by_pixel(-8, 10.5) },
    { red = util.by_pixel(5.5, 6), green = util.by_pixel(1.5, 12.5) },
    { red = util.by_pixel(9.5, 1.5), green = util.by_pixel(11.5, 9) },
    { red = util.by_pixel(10, -5.5), green = util.by_pixel(13.5, 1.5) },
    { red = util.by_pixel(3, -9.5), green = util.by_pixel(8.5, -5) },
    { red = util.by_pixel(-3, -9), green = util.by_pixel(-8.5, -4.5) },
    { red = util.by_pixel(-9, 2.5), green = util.by_pixel(-11, 9) },
    { red = util.by_pixel(3, 6), green = util.by_pixel(8.5, 10) },
    { red = util.by_pixel(-3, 6.5), green = util.by_pixel(-5.5, 12) },
    { red = util.by_pixel(4.5, 6.5), green = util.by_pixel(2, 12.5) },
    { red = util.by_pixel(9.5, 1.5), green = util.by_pixel(11.5, 9) },
    { red = util.by_pixel(9.5, -3.5), green = util.by_pixel(11.5, 3.5) },
    { red = util.by_pixel(3.5, -8.5), green = util.by_pixel(7, -2.5) },
    { red = util.by_pixel(-3.5, -8.5), green = util.by_pixel(-6, -4) },
    { red = util.by_pixel(-8.5, 3), green = util.by_pixel(-10, 9.5) },
    { red = util.by_pixel(3.5, 7), green = util.by_pixel(6.5, 12) }
  },

  wire_shadow_offsets =
  {
    { red = util.by_pixel(2, 8), green = util.by_pixel(-5, 8.5) },
    { red = util.by_pixel(11.5, 6), green = util.by_pixel(6, 9.5) },
    { red = util.by_pixel(13.5, 0), green = util.by_pixel(16, 6.5) },
    { red = util.by_pixel(13, -4), green = util.by_pixel(19, 0) },
    { red = util.by_pixel(7, -7), green = util.by_pixel(15, -6.5) },
    { red = util.by_pixel(-3, -5), green = util.by_pixel(4.5, -9) },
    { red = util.by_pixel(-7, -1), green = util.by_pixel(-4, -7) },
    { red = util.by_pixel(-5, 4.5), green = util.by_pixel(-10.5, 0.5) },
    { red = util.by_pixel(4.5, 12), green = util.by_pixel(-5, 11.5) },
    { red = util.by_pixel(13, 11), green = util.by_pixel(5, 14) },
    { red = util.by_pixel(19, 6), green = util.by_pixel(16.5, 11) },
    { red = util.by_pixel(18, 0), green = util.by_pixel(19.5, 4) },
    { red = util.by_pixel(11, -3.5), green = util.by_pixel(15, -3) },
    { red = util.by_pixel(4.5, -3.5), green = util.by_pixel(-5.5, -3) },
    { red = util.by_pixel(-3, 6), green = util.by_pixel(-5, 11.5) },
    { red = util.by_pixel(10.5, 12), green = util.by_pixel(14.5, 11.5) },
    { red = util.by_pixel(6.5, 14.5), green = util.by_pixel(-4, 14) },
    { red = util.by_pixel(15.5, 14), green = util.by_pixel(6, 16) },
    { red = util.by_pixel(20.5, 9.5), green = util.by_pixel(15.5, 12.5) },
    { red = util.by_pixel(20, 2.5), green = util.by_pixel(18.5, 6) },
    { red = util.by_pixel(14, -1), green = util.by_pixel(11.5, 0.5) },
    { red = util.by_pixel(7, -1), green = util.by_pixel(-4, -0.5) },
    { red = util.by_pixel(-3.5, 9.5), green = util.by_pixel(-6, 13) },
    { red = util.by_pixel(14, 14), green = util.by_pixel(12.5, 14) },
    { red = util.by_pixel(8, 15), green = util.by_pixel(-2, 14.5) },
    { red = util.by_pixel(14.5, 15), green = util.by_pixel(7, 16) },
    { red = util.by_pixel(21, 10.5), green = util.by_pixel(14, 12) },
    { red = util.by_pixel(19.5, 4), green = util.by_pixel(14.5, 4.5) },
    { red = util.by_pixel(15, 0), green = util.by_pixel(10.5, 1) },
    { red = util.by_pixel(8, 0.5), green = util.by_pixel(-1.5, 0) },
    { red = util.by_pixel(-3, 11), green = util.by_pixel(-6.5, 12) },
    { red = util.by_pixel(14, 14.5), green = util.by_pixel(8.5, 14) }
  },

  light_offsets =
  {
    { rg = util.by_pixel(-2, -3.5), b = util.by_pixel(-7, -3.5) },
    { rg = util.by_pixel(-1, -2.5), b = util.by_pixel(-4.5, -0.5) },
    { rg = util.by_pixel(1, -2.5), b = util.by_pixel(1, 1) },
    { rg = util.by_pixel(2.5, -3.5), b = util.by_pixel(5.5, -1) },
    { rg = util.by_pixel(2.5, -4.5), b = util.by_pixel(7.5, -4.5) },
    { rg = util.by_pixel(1.5, -5.5), b = util.by_pixel(5, -8) },
    { rg = util.by_pixel(-0.5, -5.5), b = util.by_pixel(-0.5, -9.5) },
    { rg = util.by_pixel(-2, -5), b = util.by_pixel(-5.5, -7.5) },
    { rg = util.by_pixel(-5, -2.5), b = util.by_pixel(-9, -0.5) },
    { rg = util.by_pixel(-3, 0), b = util.by_pixel(-6, 4) },
    { rg = util.by_pixel(1, 1), b = util.by_pixel(1, 5.5) },
    { rg = util.by_pixel(4, -0.5), b = util.by_pixel(7, 3.5) },
    { rg = util.by_pixel(5, -3), b = util.by_pixel(9.5, -1.5) },
    { rg = util.by_pixel(-5, -3), b = util.by_pixel(-9, -1.5) },
    { rg = util.by_pixel(-0.5, 1), b = util.by_pixel(-0.5, 5.5) },
    { rg = util.by_pixel(5, -2.5), b = util.by_pixel(9.5, -0.5) },
    { rg = util.by_pixel(-6.5, -0.5), b = util.by_pixel(-9, 2.5) },
    { rg = util.by_pixel(-4, 3), b = util.by_pixel(-5.5, 7) },
    { rg = util.by_pixel(0.5, 3.5), b = util.by_pixel(1, 9) },
    { rg = util.by_pixel(5, 2), b = util.by_pixel(7, 6.5) },
    { rg = util.by_pixel(6.5, -1), b = util.by_pixel(9, 2) },
    { rg = util.by_pixel(-6.5, -1), b = util.by_pixel(-9, 2) },
    { rg = util.by_pixel(-0.5, 4), b = util.by_pixel(-0.5, 8.5) },
    { rg = util.by_pixel(6.5, -0.5), b = util.by_pixel(9, 2.5) },
    { rg = util.by_pixel(-6, 2), b = util.by_pixel(-6.5, 5.5) },
    { rg = util.by_pixel(-3.5, 5), b = util.by_pixel(-3.5, 8.5) },
    { rg = util.by_pixel(0.5, 6), b = util.by_pixel(1, 9.5) },
    { rg = util.by_pixel(5, 4.5), b = util.by_pixel(5, 8) },
    { rg = util.by_pixel(6.5, 1.5), b = util.by_pixel(6.5, 5) },
    { rg = util.by_pixel(-6, 2), b = util.by_pixel(-6, 5.5) },
    { rg = util.by_pixel(1, 6), b = util.by_pixel(1, 9.5) },
    { rg = util.by_pixel(6.5, 1), b = util.by_pixel(6.5, 5) }
  }
}


circuit_connector_definitions["accumulator"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 26, main_offset = util.by_pixel(18.5, 19), shadow_offset = util.by_pixel(20.5, 25.5), show_shadow = true }
  }
)

circuit_connector_definitions["assembling-machine"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 18, main_offset = util.by_pixel(24, 25), shadow_offset = util.by_pixel(24.5, 27.5), show_shadow = false }
  }
)

circuit_connector_definitions["burner-mining-drill"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 17, main_offset = util.by_pixel(-9, -3.5), shadow_offset = util.by_pixel(12.5, 4), show_shadow = true },
    { variation = 17, main_offset = util.by_pixel(-11, -7.5), shadow_offset = util.by_pixel(7, 1), show_shadow = true },
    { variation = 17, main_offset = util.by_pixel(-10.5, -5.5), shadow_offset = util.by_pixel(10, 5), show_shadow = true },
    { variation = 17, main_offset = util.by_pixel(-13.5, -3), shadow_offset = util.by_pixel(4.5, 7), show_shadow = true }
  }
)

circuit_connector_definitions["chest"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 26, main_offset = util.by_pixel(3, 5.5), shadow_offset = util.by_pixel(7.5, 7.5), show_shadow = true }
  }
)

circuit_connector_definitions["electric-mining-drill"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 4, main_offset = util.by_pixel(-3.5, -55.5), shadow_offset = util.by_pixel(-2, -44.5), show_shadow = true },
    { variation = 2, main_offset = util.by_pixel(42, -12.5), shadow_offset = util.by_pixel(43.5, -0.5), show_shadow = true },
    { variation = 0, main_offset = util.by_pixel(4.5, 33), shadow_offset = util.by_pixel(8.5, 44.5), show_shadow = true },
    { variation = 6, main_offset = util.by_pixel(-41.5, -6.5), shadow_offset = util.by_pixel(-33.5, 5), show_shadow = true }
  }
)

circuit_connector_definitions["gate"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 6, main_offset = util.by_pixel(0, -16.5), shadow_offset = util.by_pixel(27, 29), show_shadow = false }
  }
)

circuit_connector_definitions["inserter"] = circuit_connector_definitions.create
(
  inserter_connector_template,
  {
    { variation = 2, main_offset = util.by_pixel(0, 0), shadow_offset = util.by_pixel(0, 0), show_shadow = true },
    { variation = 3, main_offset = util.by_pixel(0, 0), shadow_offset = util.by_pixel(0, 0), show_shadow = true },
    { variation = 0, main_offset = util.by_pixel(0, 0), shadow_offset = util.by_pixel(0, 0), show_shadow = true },
    { variation = 1, main_offset = util.by_pixel(0, 0), shadow_offset = util.by_pixel(0, 0), show_shadow = true }
  }
)

circuit_connector_definitions["lamp"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 26, main_offset = util.by_pixel(4.5, 7.5), shadow_offset = util.by_pixel(3.5, 7.5), show_shadow = true }
  }
)

circuit_connector_definitions["offshore-pump"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 24, main_offset = util.by_pixel(-16, -8.5), shadow_offset = util.by_pixel(0-2, -0.5), show_shadow = false },
    { variation = 26, main_offset = util.by_pixel(-7, 4.5), shadow_offset = util.by_pixel(-5, 14.5), show_shadow = true },
    { variation = 24-8, main_offset = util.by_pixel(-13.5, -5.5), shadow_offset = util.by_pixel(-11.5, 9), show_shadow = false },
    { variation = 26, main_offset = util.by_pixel(5.5, 4.5), shadow_offset = util.by_pixel(-15, -12.5), show_shadow = true }
  }
)

circuit_connector_definitions["pump"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 24, main_offset = util.by_pixel(-15, -8.5), shadow_offset = util.by_pixel(0, -0.5), show_shadow = false },
    { variation = 26, main_offset = util.by_pixel(-16, 3.5), shadow_offset = util.by_pixel(-14, 13.5), show_shadow = true },
    { variation = 24, main_offset = util.by_pixel(-14.5, -8.5), shadow_offset = util.by_pixel(-12.5, 6), show_shadow = false },
    { variation = 26, main_offset = util.by_pixel(13.5, 4.5), shadow_offset = util.by_pixel(-7, -12.5), show_shadow = true }
  }
)

circuit_connector_definitions["pumpjack"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 26, main_offset = util.by_pixel(3, -28.5), shadow_offset = util.by_pixel(3, -28.5), show_shadow = true },
    { variation = 26, main_offset = util.by_pixel(3, -28.5), shadow_offset = util.by_pixel(3, -28.5), show_shadow = true },
    { variation = 26, main_offset = util.by_pixel(3, -28.5), shadow_offset = util.by_pixel(3, -28.5), show_shadow = true },
    { variation = 26, main_offset = util.by_pixel(3, -28.5), shadow_offset = util.by_pixel(3, -28.5), show_shadow = true }
  }
)

circuit_connector_definitions["radar"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 24, main_offset = util.by_pixel(-42.5, -10), shadow_offset = util.by_pixel(-42, -7.5), show_shadow = false }
  }
)

circuit_connector_definitions["rail-chain-signal"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 6, main_offset = util.add_shift(util.by_pixel(-34, 17.5), util.by_pixel(32,0)), shadow_offset = util.add_shift(util.by_pixel(-34, 17.5), util.by_pixel(32,0)), show_shadow = true },
    { variation = 5, main_offset = util.add_shift(util.by_pixel(-46, -17), util.by_pixel(32,32)), shadow_offset = util.add_shift(util.by_pixel(-46, -17), util.by_pixel(32,32)), show_shadow = true },
    { variation = 4, main_offset = util.add_shift(util.by_pixel(-21.5, -18), util.by_pixel(0,32)), shadow_offset = util.add_shift(util.by_pixel(-21.5, -18), util.by_pixel(0,32)), show_shadow = true },
    { variation = 3, main_offset = util.add_shift(util.by_pixel(37.5, -23), util.by_pixel(-32,32)), shadow_offset = util.add_shift(util.by_pixel(37.5, -23), util.by_pixel(-32,32)), show_shadow = true },
    { variation = 2, main_offset = util.add_shift(util.by_pixel(67.5, 7.5), util.by_pixel(-64,0)), shadow_offset = util.add_shift(util.by_pixel(67.5, 7.5), util.by_pixel(-64,0)), show_shadow = true },
    { variation = 1, main_offset = util.add_shift(util.by_pixel(30.5, 40), util.by_pixel(-32,-32)), shadow_offset = util.add_shift(util.by_pixel(30.5, 40), util.by_pixel(-32,-32)), show_shadow = true },
    { variation = 0, main_offset = util.add_shift(util.by_pixel(-8, 71.5), util.by_pixel(0,-64)), shadow_offset = util.add_shift(util.by_pixel(-8, 71.5), util.by_pixel(0,-64)), show_shadow = true },
    { variation = 7, main_offset = util.add_shift(util.by_pixel(-24, 44.5), util.by_pixel(32,-32)), shadow_offset = util.add_shift(util.by_pixel(-24, 44.5), util.by_pixel(32,-32)), show_shadow = true }
  }
)

circuit_connector_definitions["rail-signal"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 4, main_offset = util.by_pixel(13, -7), shadow_offset = util.by_pixel(13, -7), show_shadow = true },
    { variation = 3, main_offset = util.by_pixel(18.5, 8), shadow_offset = util.by_pixel(18.5, 8), show_shadow = true },
    { variation = 2, main_offset = util.by_pixel(7, 21.5), shadow_offset = util.by_pixel(7, 21.5), show_shadow = true },
    { variation = 1, main_offset = util.by_pixel(-6, 19.5), shadow_offset = util.by_pixel(-6, 19.5), show_shadow = true },
    { variation = 0, main_offset = util.by_pixel(-12.5, 13), shadow_offset = util.by_pixel(-12.5, 13), show_shadow = true },
    { variation = 7, main_offset = util.by_pixel(-15.5, -4.5), shadow_offset = util.by_pixel(-15.5, -4.5), show_shadow = true },
    { variation = 6, main_offset = util.by_pixel(-7, -14.5), shadow_offset = util.by_pixel(-7, -14.5), show_shadow = true },
    { variation = 5, main_offset = util.by_pixel(7.5, -12), shadow_offset = util.by_pixel(7.5, -12), show_shadow = true }
  }
)

circuit_connector_definitions["roboport"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 26, main_offset = util.by_pixel(18.5, 41), shadow_offset = util.by_pixel(20.5, 56.5), show_shadow = false }
  }
)

circuit_connector_definitions["rocket-silo"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 7, main_offset = util.by_pixel(-115, -9), shadow_offset = util.by_pixel(-115, -9), show_shadow = false }
  }
)

circuit_connector_definitions["storage-tank"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 27, main_offset = util.by_pixel(33.5, 18.5), shadow_offset = util.by_pixel(33.5, 18.5), show_shadow = false },
    { variation = 25, main_offset = util.by_pixel(-33.5, 19.5), shadow_offset = util.by_pixel(-33.5, 19.5), show_shadow = false },
    { variation = 27, main_offset = util.by_pixel(33.5, 18.5), shadow_offset = util.by_pixel(33.5, 18.5), show_shadow = false },
    { variation = 25, main_offset = util.by_pixel(-33.5, 19.5), shadow_offset = util.by_pixel(-33.5, 19.5), show_shadow = false }
  }
)

circuit_connector_definitions["train-station"] = circuit_connector_definitions.create
(
  universal_connector_template,
  {
    { variation = 28, main_offset = util.by_pixel(4.5, -54.5), shadow_offset = util.by_pixel(100, 10.5), show_shadow = true },
    { variation = 26, main_offset = util.by_pixel(-21.5, -56.5), shadow_offset = util.by_pixel(62.5, 2), show_shadow = true },
    { variation = 24, main_offset = util.by_pixel(-5, -89), shadow_offset = util.by_pixel(112, -18.5), show_shadow = true },
    { variation = 13, main_offset = util.by_pixel(10.5, -38), shadow_offset = util.by_pixel(62.5, 28.5), show_shadow = true }
  }
)
